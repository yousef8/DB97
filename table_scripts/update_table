#!/bin/bash
db_name="$1"

# Name Of The Table That Will Be Update
read -p "Enter The Table To Update: " table_name

if [ -f "$db97/$db_name/$table_name.meta" ]; then
  cut -d: -f1 "$db97/$db_name/$table_name.meta" | nl
  echo
  # The Number Of Field To Update
  while true; do
    read -p "Choose The Number Of Field To Update: " field_number
    echo
    
    if [[ -z $field_number ]]; then
      echo "No Input Detected, Enter A Valid Number..."
      elif [[ "$field_number" -le 0 || "$field_number" -gt $(wc -l "$db97/$db_name/$table_name.meta" | cut -d ' ' -f 1) ]]; then
      echo "The Choice Is Out Of The Range, Enter A Valid Number..."
      elif [[ $field_number =~ ^[0-9]+$ ]]; then
      read -p "Enter The Value To Update: " field_value # Enter The Value You Want To Update
      break
    else
      echo "Wrong Choice, Enter A Valid Number...."
      break
    fi
  done
  
else
  echo "Sorry - "$table_name" Table Is Not Exist..."
  exit 1
fi


cut -d: -f1 "$db97/$db_name/$table_name.meta" | nl
echo

while true; do
  read -rp "Search For The Record By: " table_record # Search The Record By
  echo
  
  if [[ -z $table_record ]]; then  # It's commonly used in conditional statements to test if a variable contains any value or is empty.
    echo "No Input Detected, Enter A Valid Number..."
    elif [[ "$table_record" -le 0 || "$table_record" -gt $(wc -l "$db97/$db_name/$table_name.meta" | cut -d ' ' -f 1) ]]; then
    echo "The Choice Is Out Of The Range, Enter A Valid Number..."
    elif [[ $table_record =~ ^[0-9]+$ ]]; then
    read -rp "Enter The Search Value: " record_value
    # SED => Search and Replace
    break
  else
    echo "Wrong Choice, Enter A Valid Number..."
  fi
done




# Error Handling :
# - No input detected
# - Out Of The Range
# - is a number Datatype
# - is file is exist or not


